{"ast":null,"code":"var _jsxFileName = \"/home/alex/WebstormProjects/password/src/components/NotesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PopupNotes from \"./PopupNotes\";\nimport PopupEditNotes from './PopupEditNotes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesPage() {\n  _s();\n  const [newNoteTitle, setNewNoteTitle] = useState('');\n  const [newNoteContent, setNewNoteContent] = useState('');\n  const [notes, setNotes] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup\n\n  useEffect(() => {\n    // Effectuer une requête GET pour récupérer toutes les notes\n    fetch('http://localhost:3001/notes', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch notes');\n      }\n      return response.json();\n    }).then(data => {\n      setNotes(data); // Mettre à jour les notes dans l'état local\n    }).catch(error => {\n      console.error('Error fetching notes:', error);\n    });\n  }, []);\n\n  // Fonction pour ajouter une nouvelle note\n  const handleAddNote = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          Title: newNoteTitle,\n          Content: newNoteContent\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Si la note est ajoutée avec succès, mettre à jour la liste des notes\n        setNotes([...notes, data.note]);\n        // Effacer les champs de saisie pour une nouvelle note\n        setNewNoteTitle('');\n        setNewNoteContent('');\n      } else {\n        console.error('Erreur lors de l\\'ajout de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout de la note :', error);\n    }\n  };\n\n  // Fonction pour supprimer une note\n  const handleDeleteNote = async noteId => {\n    try {\n      const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        // Si la note est supprimée avec succès, mettre à jour la liste des notes en retirant la note supprimée\n        const updatedNotes = notes.filter(note => note.NoteID !== noteId);\n        setNotes(updatedNotes);\n      } else {\n        const data = await response.json();\n        console.error('Erreur lors de la suppression de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la note :', error);\n    }\n  };\n\n  // Fonction pour modifier une note\n  const handleEditNote = async (noteId, updatedTitle, updatedContent) => {\n    try {\n      const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          Title: updatedTitle,\n          Content: updatedContent\n        })\n      });\n      if (response.ok) {\n        // Si la note est modifiée avec succès, mettre à jour la liste des notes\n        const updatedNotes = notes.map(note => {\n          if (note.NoteID === noteId) {\n            return {\n              ...note,\n              Title: updatedTitle,\n              Content: updatedContent\n            };\n          }\n          return note;\n        });\n        setNotes(updatedNotes);\n      } else {\n        const data = await response.json();\n        console.error('Erreur lors de la modification de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la modification de la note :', error);\n    }\n  };\n  const openPopup = () => {\n    setIsPopupOpen(true);\n  };\n\n  // Fonction pour fermer le popup\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ajouter une nouvelle note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openPopup,\n        children: \"Ajouter une note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liste des notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: note.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), \": \", note.Content, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditNote(note.NoteID, 'Nouveau titre', 'Nouveau contenu'),\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteNote(note.NoteID),\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)]\n      }, note.NoteID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      children: \"Retour au tableau de bord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupNotes, {\n      isOpen: isPopupOpen,\n      onClose: closePopup,\n      onSubmit: handleAddNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Titre de la note\",\n        value: newNoteTitle,\n        onChange: e => setNewNoteTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Contenu de la note\",\n        value: newNoteContent,\n        onChange: e => setNewNoteContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(NotesPage, \"Xa/iHz2eqr/sOP47xqdEg89tJB4=\");\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","PopupNotes","PopupEditNotes","jsxDEV","_jsxDEV","NotesPage","_s","newNoteTitle","setNewNoteTitle","newNoteContent","setNewNoteContent","notes","setNotes","isPopupOpen","setIsPopupOpen","fetch","headers","localStorage","getItem","then","response","ok","Error","json","data","catch","error","console","handleAddNote","method","body","JSON","stringify","Title","Content","note","handleDeleteNote","noteId","updatedNotes","filter","NoteID","handleEditNote","updatedTitle","updatedContent","map","openPopup","closePopup","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","isOpen","onClose","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/alex/WebstormProjects/password/src/components/NotesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PopupNotes from \"./PopupNotes\";\nimport PopupEditNotes from './PopupEditNotes';\nfunction NotesPage() {\n    const [newNoteTitle, setNewNoteTitle] = useState('');\n    const [newNoteContent, setNewNoteContent] = useState('');\n    const [notes, setNotes] = useState([]);\n    const [isPopupOpen, setIsPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup\n\n\n    useEffect(() => {\n        // Effectuer une requête GET pour récupérer toutes les notes\n        fetch('http://localhost:3001/notes', {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch notes');\n                }\n                return response.json();\n            })\n            .then(data => {\n                setNotes(data); // Mettre à jour les notes dans l'état local\n            })\n            .catch(error => {\n                console.error('Error fetching notes:', error);\n            });\n    }, []);\n\n    // Fonction pour ajouter une nouvelle note\n    const handleAddNote = async () => {\n        try {\n            const response = await fetch('http://localhost:3001/notes', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify({\n                    Title: newNoteTitle,\n                    Content: newNoteContent\n                }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                // Si la note est ajoutée avec succès, mettre à jour la liste des notes\n                setNotes([...notes, data.note]);\n                // Effacer les champs de saisie pour une nouvelle note\n                setNewNoteTitle('');\n                setNewNoteContent('');\n            } else {\n                console.error('Erreur lors de l\\'ajout de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de l\\'ajout de la note :', error);\n        }\n    };\n\n    // Fonction pour supprimer une note\n    const handleDeleteNote = async (noteId) => {\n        try {\n            const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n            });\n            if (response.ok) {\n                // Si la note est supprimée avec succès, mettre à jour la liste des notes en retirant la note supprimée\n                const updatedNotes = notes.filter(note => note.NoteID !== noteId);\n                setNotes(updatedNotes);\n            } else {\n                const data = await response.json();\n                console.error('Erreur lors de la suppression de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la suppression de la note :', error);\n        }\n    };\n\n    // Fonction pour modifier une note\n    const handleEditNote = async (noteId, updatedTitle, updatedContent) => {\n        try {\n            const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify({\n                    Title: updatedTitle,\n                    Content: updatedContent\n                }),\n            });\n            if (response.ok) {\n                // Si la note est modifiée avec succès, mettre à jour la liste des notes\n                const updatedNotes = notes.map(note => {\n                    if (note.NoteID === noteId) {\n                        return {\n                            ...note,\n                            Title: updatedTitle,\n                            Content: updatedContent\n                        };\n                    }\n                    return note;\n                });\n                setNotes(updatedNotes);\n            } else {\n                const data = await response.json();\n                console.error('Erreur lors de la modification de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la modification de la note :', error);\n        }\n    };\n    const openPopup = () => {\n        setIsPopupOpen(true);\n    };\n\n    // Fonction pour fermer le popup\n    const closePopup = () => {\n        setIsPopupOpen(false);\n    };\n    return (\n        <div>\n            <h2>Notes</h2>\n            <div>\n                <h3>Ajouter une nouvelle note</h3>\n                <button onClick={openPopup}>Ajouter une note</button> {/* Bouton pour ouvrir le popup */}\n            </div>\n            <h3>Liste des notes</h3>\n            <ul>\n                {notes.map(note => (\n                    <li key={note.NoteID}>\n                        <strong>{note.Title}</strong>: {note.Content}\n                        <button onClick={() => handleEditNote(note.NoteID, 'Nouveau titre', 'Nouveau contenu')}>Modifier</button>\n                        <button onClick={() => handleDeleteNote(note.NoteID)}>Supprimer</button>\n                    </li>\n                ))}\n            </ul>\n            <Link to=\"/dashboard\">Retour au tableau de bord</Link>\n\n            {/* PopupForm pour ajouter une nouvelle note */}\n            <PopupNotes isOpen={isPopupOpen} onClose={closePopup} onSubmit={handleAddNote}>\n                {/* Contenu du formulaire */}\n                <input type=\"text\" placeholder=\"Titre de la note\" value={newNoteTitle} onChange={(e) => setNewNoteTitle(e.target.value)} />\n                <textarea placeholder=\"Contenu de la note\" value={newNoteContent} onChange={(e) => setNewNoteContent(e.target.value)} />\n            </PopupNotes>\n        </div>\n    );\n}\n\n\nexport default NotesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}