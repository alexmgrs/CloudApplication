{"ast":null,"code":"var _jsxFileName = \"/home/alex/WebstormProjects/password/src/components/DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/notes', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        // Assure-toi de remplacer 'token' par la clé utilisée pour stocker le token dans localStorage\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch notes');\n      }\n      return response.json();\n    }).then(data => {\n      setNotes(data); // Met à jour les notes dans l'état local\n    }).catch(error => {\n      console.error('Error fetching notes:', error);\n    });\n  }, []);\n  // Le tableau vide en tant que dépendance garantit que useEffect ne s'exécutera qu'une seule fois après le montage initial\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Notes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: note.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.Content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, note.NoteID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(DashboardPage, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DashboardPage","_s","notes","setNotes","fetch","method","headers","localStorage","getItem","then","response","ok","Error","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","Title","Content","NoteID","_c","$RefreshReg$"],"sources":["/home/alex/WebstormProjects/password/src/components/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction DashboardPage() {\n    const [notes, setNotes] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:3001/notes', {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`, // Assure-toi de remplacer 'token' par la clé utilisée pour stocker le token dans localStorage\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch notes');\n                }\n                return response.json();\n            })\n            .then(data => {\n                setNotes(data); // Met à jour les notes dans l'état local\n            })\n            .catch(error => {\n                console.error('Error fetching notes:', error);\n            });\n    }, []);\n    // Le tableau vide en tant que dépendance garantit que useEffect ne s'exécutera qu'une seule fois après le montage initial\n\n    return (\n        <div>\n            <h2>Dashboard</h2>\n            <h3>Notes:</h3>\n            <ul>\n                {notes.map(note => (\n                    <li key={note.NoteID}>\n                        <h4>{note.Title}</h4>\n                        <p>{note.Content}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default DashboardPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,6BAA6B,EAAE;MACjCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;QAAE;QAC5D,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVX,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA,oBACIjB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBvB,OAAA;MAAAmB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfvB,OAAA;MAAAmB,QAAA,EACKhB,KAAK,CAACqB,GAAG,CAACC,IAAI,iBACXzB,OAAA;QAAAmB,QAAA,gBACInB,OAAA;UAAAmB,QAAA,EAAKM,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBvB,OAAA;UAAAmB,QAAA,EAAIM,IAAI,CAACE;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFhBE,IAAI,CAACG,MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACrB,EAAA,CAxCQD,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AA0CtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}