{"ast":null,"code":"var _jsxFileName = \"/home/alex/WebstormProjects/password/src/components/NotesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PopupNotes from \"./PopupNotes\";\nimport PopupEditNotes from './PopupEditNotes';\nimport './NotesPage.css'; // Importer le CSS de la page de mot de passe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesPage() {\n  _s();\n  const [newNoteTitle, setNewNoteTitle] = useState('');\n  const [newNoteContent, setNewNoteContent] = useState('');\n  const [notes, setNotes] = useState([]);\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup d'ajout\n  const [editNoteId, setEditNoteId] = useState(null); // État local pour stocker l'ID de la note en cours de modification\n  const [editNoteTitle, setEditNoteTitle] = useState(''); // État local pour le titre de la note en cours de modification\n  const [editNoteContent, setEditNoteContent] = useState(''); // État local pour le contenu de la note en cours de modification\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup de modification\n\n  useEffect(() => {\n    // Effectuer une requête GET pour récupérer toutes les notes\n    fetch('http://localhost:3001/notes', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch notes');\n      }\n      return response.json();\n    }).then(data => {\n      setNotes(data); // Mettre à jour les notes dans l'état local\n    }).catch(error => {\n      console.error('Error fetching notes:', error);\n    });\n  }, []);\n\n  // Fonction pour ajouter une nouvelle note\n  const handleAddNote = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          Title: newNoteTitle,\n          Content: newNoteContent\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Si la note est ajoutée avec succès, mettre à jour la liste des notes\n        setNotes([...notes, data.note]);\n        // Effacer les champs de saisie pour une nouvelle note\n        setNewNoteTitle('');\n        setNewNoteContent('');\n      } else {\n        console.error('Erreur lors de l\\'ajout de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout de la note :', error);\n    }\n  };\n\n  // Fonction pour supprimer une note\n  const handleDeleteNote = async noteId => {\n    try {\n      const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        // Si la note est supprimée avec succès, mettre à jour la liste des notes en retirant la note supprimée\n        const updatedNotes = notes.filter(note => note.NoteID !== noteId);\n        setNotes(updatedNotes);\n      } else {\n        const data = await response.json();\n        console.error('Erreur lors de la suppression de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la note :', error);\n    }\n  };\n\n  // Fonction pour modifier une note\n  const handleEditNote = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/notes/${editNoteId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          Title: editNoteTitle,\n          Content: editNoteContent\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Si la note est modifiée avec succès, mettre à jour la liste des notes\n        const updatedNotes = notes.map(note => {\n          if (note.NoteID === editNoteId) {\n            return {\n              ...note,\n              Title: editNoteTitle,\n              Content: editNoteContent\n            };\n          }\n          return note;\n        });\n        setNotes(updatedNotes);\n        setIsEditPopupOpen(false); // Fermer le popup après la modification\n      } else {\n        console.error('Erreur lors de la modification de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la modification de la note :', error);\n    }\n  };\n  const openEditPopup = (noteId, title, content) => {\n    setEditNoteId(noteId);\n    setEditNoteTitle(title);\n    setEditNoteContent(content);\n    setIsEditPopupOpen(true);\n  };\n  const openAddPopup = () => {\n    setIsAddPopupOpen(true);\n  };\n\n  // Fonction pour fermer le popup\n  const closePopups = () => {\n    setIsAddPopupOpen(false);\n    setIsEditPopupOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homepage-button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          className: \"homepage-link\",\n          children: \"Home Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: openAddPopup,\n          children: \"Add New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupNotes, {\n      isOpen: isAddPopupOpen,\n      onClose: closePopups,\n      onSubmit: handleAddNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newNoteTitle,\n        onChange: e => setNewNoteTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: newNoteContent,\n        onChange: e => setNewNoteContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"password-list-title\",\n      children: \"Notes List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-format-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"password-grid\",\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"password-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: note.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), \": \", note.Content, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => openEditPopup(note.NoteID, note.Title, note.Content),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => handleDeleteNote(note.NoteID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PopupEditNotes, {\n            isOpen: isEditPopupOpen,\n            onClose: closePopups,\n            onSubmit: handleEditNote,\n            title: editNoteTitle,\n            content: editNoteContent,\n            setTitle: setEditNoteTitle,\n            setContent: setEditNoteContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)]\n        }, note.NoteID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(NotesPage, \"P9y31iRXgtWq1xAqi9xqCyTSmzc=\");\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","PopupNotes","PopupEditNotes","jsxDEV","_jsxDEV","NotesPage","_s","newNoteTitle","setNewNoteTitle","newNoteContent","setNewNoteContent","notes","setNotes","isAddPopupOpen","setIsAddPopupOpen","editNoteId","setEditNoteId","editNoteTitle","setEditNoteTitle","editNoteContent","setEditNoteContent","isEditPopupOpen","setIsEditPopupOpen","fetch","headers","localStorage","getItem","then","response","ok","Error","json","data","catch","error","console","handleAddNote","method","body","JSON","stringify","Title","Content","note","handleDeleteNote","noteId","updatedNotes","filter","NoteID","handleEditNote","map","openEditPopup","title","content","openAddPopup","closePopups","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","onSubmit","type","placeholder","value","onChange","e","target","setTitle","setContent","_c","$RefreshReg$"],"sources":["/home/alex/WebstormProjects/password/src/components/NotesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PopupNotes from \"./PopupNotes\";\nimport PopupEditNotes from './PopupEditNotes';\nimport './NotesPage.css'; // Importer le CSS de la page de mot de passe\nfunction NotesPage() {\n    const [newNoteTitle, setNewNoteTitle] = useState('');\n    const [newNoteContent, setNewNoteContent] = useState('');\n    const [notes, setNotes] = useState([]);\n    const [isAddPopupOpen, setIsAddPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup d'ajout\n    const [editNoteId, setEditNoteId] = useState(null); // État local pour stocker l'ID de la note en cours de modification\n    const [editNoteTitle, setEditNoteTitle] = useState(''); // État local pour le titre de la note en cours de modification\n    const [editNoteContent, setEditNoteContent] = useState(''); // État local pour le contenu de la note en cours de modification\n    const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup de modification\n\n    useEffect(() => {\n        // Effectuer une requête GET pour récupérer toutes les notes\n        fetch('http://localhost:3001/notes', {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch notes');\n                }\n                return response.json();\n            })\n            .then(data => {\n                setNotes(data); // Mettre à jour les notes dans l'état local\n            })\n            .catch(error => {\n                console.error('Error fetching notes:', error);\n            });\n    }, []);\n\n    // Fonction pour ajouter une nouvelle note\n    const handleAddNote = async () => {\n        try {\n            const response = await fetch('http://localhost:3001/notes', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify({\n                    Title: newNoteTitle,\n                    Content: newNoteContent\n                }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                // Si la note est ajoutée avec succès, mettre à jour la liste des notes\n                setNotes([...notes, data.note]);\n                // Effacer les champs de saisie pour une nouvelle note\n                setNewNoteTitle('');\n                setNewNoteContent('');\n            } else {\n                console.error('Erreur lors de l\\'ajout de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de l\\'ajout de la note :', error);\n        }\n    };\n\n    // Fonction pour supprimer une note\n    const handleDeleteNote = async (noteId) => {\n        try {\n            const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n            });\n            if (response.ok) {\n                // Si la note est supprimée avec succès, mettre à jour la liste des notes en retirant la note supprimée\n                const updatedNotes = notes.filter(note => note.NoteID !== noteId);\n                setNotes(updatedNotes);\n            } else {\n                const data = await response.json();\n                console.error('Erreur lors de la suppression de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la suppression de la note :', error);\n        }\n    };\n\n    // Fonction pour modifier une note\n    const handleEditNote = async () => {\n        try {\n            const response = await fetch(`http://localhost:3001/notes/${editNoteId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify({\n                    Title: editNoteTitle,\n                    Content: editNoteContent\n                }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                // Si la note est modifiée avec succès, mettre à jour la liste des notes\n                const updatedNotes = notes.map(note => {\n                    if (note.NoteID === editNoteId) {\n                        return {\n                            ...note,\n                            Title: editNoteTitle,\n                            Content: editNoteContent\n                        };\n                    }\n                    return note;\n                });\n                setNotes(updatedNotes);\n                setIsEditPopupOpen(false); // Fermer le popup après la modification\n            } else {\n                console.error('Erreur lors de la modification de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la modification de la note :', error);\n        }\n    };\n    const openEditPopup = (noteId, title, content) => {\n        setEditNoteId(noteId);\n        setEditNoteTitle(title);\n        setEditNoteContent(content);\n        setIsEditPopupOpen(true);\n    };\n    const openAddPopup = () => {\n        setIsAddPopupOpen(true);\n    };\n\n    // Fonction pour fermer le popup\n    const closePopups = () => {\n        setIsAddPopupOpen(false);\n        setIsEditPopupOpen(false);\n    };\n    return (\n        <div className=\"page-container\">\n            <div className=\"button-container\">\n                <div className=\"homepage-button\">\n                    <Link to=\"/dashboard\" className=\"homepage-link\">Home Page</Link>\n                </div>\n                <div className=\"title-container\">\n                    <button className=\"add-button\" onClick={openAddPopup}>Add New Note</button>\n                </div>\n            </div>\n            <PopupNotes isOpen={isAddPopupOpen} onClose={closePopups} onSubmit={handleAddNote}>\n                <input type=\"text\" placeholder=\"Title\" value={newNoteTitle} onChange={(e) => setNewNoteTitle(e.target.value)} />\n                <textarea placeholder=\"Content\" value={newNoteContent} onChange={(e) => setNewNoteContent(e.target.value)} />\n            </PopupNotes>\n            <h2 className=\"password-list-title\">Notes List</h2>\n            <div className=\"ag-format-container\">\n                <ul className=\"password-grid\">\n                    {notes.map(note => (\n                        <li key={note.NoteID} className=\"password-card\">\n                            <strong>{note.Title}</strong>: {note.Content}\n                            <div className=\"password-actions\">\n                                <button className=\"edit-button\" onClick={() => openEditPopup(note.NoteID, note.Title, note.Content)}>Edit</button>\n                                <button className=\"delete-button\" onClick={() => handleDeleteNote(note.NoteID)}>Delete</button>\n                            </div>\n                            <PopupEditNotes isOpen={isEditPopupOpen} onClose={closePopups} onSubmit={handleEditNote} title={editNoteTitle} content={editNoteContent} setTitle={setEditNoteTitle} setContent={setEditNoteContent} />\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default NotesPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/DC,SAAS,CAAC,MAAM;IACZ;IACAwB,KAAK,CAAC,6BAA6B,EAAE;MACjCC,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;MAC7D;IACJ,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVpB,QAAQ,CAACoB,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAAC,6BAA6B,EAAE;QACxDc,MAAM,EAAE,MAAM;QACdb,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAC7D,CAAC;QACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAElC,YAAY;UACnBmC,OAAO,EAAEjC;QACb,CAAC;MACL,CAAC,CAAC;MACF,MAAMuB,IAAI,GAAG,MAAMJ,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAIH,QAAQ,CAACC,EAAE,EAAE;QACb;QACAjB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEqB,IAAI,CAACW,IAAI,CAAC,CAAC;QAC/B;QACAnC,eAAe,CAAC,EAAE,CAAC;QACnBE,iBAAiB,CAAC,EAAE,CAAC;MACzB,CAAC,MAAM;QACHyB,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEF,IAAI,CAACE,KAAK,CAAC;MACrE;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAChE;EACJ,CAAC;;EAED;EACA,MAAMU,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACvC,IAAI;MACA,MAAMjB,QAAQ,GAAG,MAAML,KAAK,CAAE,+BAA8BsB,MAAO,EAAC,EAAE;QAClER,MAAM,EAAE,QAAQ;QAChBb,OAAO,EAAE;UACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAC7D;MACJ,CAAC,CAAC;MACF,IAAIE,QAAQ,CAACC,EAAE,EAAE;QACb;QACA,MAAMiB,YAAY,GAAGnC,KAAK,CAACoC,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACK,MAAM,KAAKH,MAAM,CAAC;QACjEjC,QAAQ,CAACkC,YAAY,CAAC;MAC1B,CAAC,MAAM;QACH,MAAMd,IAAI,GAAG,MAAMJ,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCI,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEF,IAAI,CAACE,KAAK,CAAC;MAC3E;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IACtE;EACJ,CAAC;;EAED;EACA,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMrB,QAAQ,GAAG,MAAML,KAAK,CAAE,+BAA8BR,UAAW,EAAC,EAAE;QACtEsB,MAAM,EAAE,KAAK;QACbb,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAC7D,CAAC;QACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAExB,aAAa;UACpByB,OAAO,EAAEvB;QACb,CAAC;MACL,CAAC,CAAC;MACF,MAAMa,IAAI,GAAG,MAAMJ,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAIH,QAAQ,CAACC,EAAE,EAAE;QACb;QACA,MAAMiB,YAAY,GAAGnC,KAAK,CAACuC,GAAG,CAACP,IAAI,IAAI;UACnC,IAAIA,IAAI,CAACK,MAAM,KAAKjC,UAAU,EAAE;YAC5B,OAAO;cACH,GAAG4B,IAAI;cACPF,KAAK,EAAExB,aAAa;cACpByB,OAAO,EAAEvB;YACb,CAAC;UACL;UACA,OAAOwB,IAAI;QACf,CAAC,CAAC;QACF/B,QAAQ,CAACkC,YAAY,CAAC;QACtBxB,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QACHa,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEF,IAAI,CAACE,KAAK,CAAC;MAC5E;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACvE;EACJ,CAAC;EACD,MAAMiB,aAAa,GAAGA,CAACN,MAAM,EAAEO,KAAK,EAAEC,OAAO,KAAK;IAC9CrC,aAAa,CAAC6B,MAAM,CAAC;IACrB3B,gBAAgB,CAACkC,KAAK,CAAC;IACvBhC,kBAAkB,CAACiC,OAAO,CAAC;IAC3B/B,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EACD,MAAMgC,YAAY,GAAGA,CAAA,KAAM;IACvBxC,iBAAiB,CAAC,IAAI,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMyC,WAAW,GAAGA,CAAA,KAAM;IACtBzC,iBAAiB,CAAC,KAAK,CAAC;IACxBQ,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EACD,oBACIlB,OAAA;IAAKoD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BrD,OAAA;MAAKoD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BrD,OAAA;QAAKoD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BrD,OAAA,CAACJ,IAAI;UAAC0D,EAAE,EAAC,YAAY;UAACF,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACN1D,OAAA;QAAKoD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BrD,OAAA;UAAQoD,SAAS,EAAC,YAAY;UAACO,OAAO,EAAET,YAAa;UAAAG,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN1D,OAAA,CAACH,UAAU;MAAC+D,MAAM,EAAEnD,cAAe;MAACoD,OAAO,EAAEV,WAAY;MAACW,QAAQ,EAAE9B,aAAc;MAAAqB,QAAA,gBAC9ErD,OAAA;QAAO+D,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,OAAO;QAACC,KAAK,EAAE9D,YAAa;QAAC+D,QAAQ,EAAGC,CAAC,IAAK/D,eAAe,CAAC+D,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChH1D,OAAA;QAAUgE,WAAW,EAAC,SAAS;QAACC,KAAK,EAAE5D,cAAe;QAAC6D,QAAQ,EAAGC,CAAC,IAAK7D,iBAAiB,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrG,CAAC,eACb1D,OAAA;MAAIoD,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnD1D,OAAA;MAAKoD,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAChCrD,OAAA;QAAIoD,SAAS,EAAC,eAAe;QAAAC,QAAA,EACxB9C,KAAK,CAACuC,GAAG,CAACP,IAAI,iBACXvC,OAAA;UAAsBoD,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC3CrD,OAAA;YAAAqD,QAAA,EAASd,IAAI,CAACF;UAAK;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,MAAE,EAACnB,IAAI,CAACD,OAAO,eAC5CtC,OAAA;YAAKoD,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC7BrD,OAAA;cAAQoD,SAAS,EAAC,aAAa;cAACO,OAAO,EAAEA,CAAA,KAAMZ,aAAa,CAACR,IAAI,CAACK,MAAM,EAAEL,IAAI,CAACF,KAAK,EAAEE,IAAI,CAACD,OAAO,CAAE;cAAAe,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClH1D,OAAA;cAAQoD,SAAS,EAAC,eAAe;cAACO,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACD,IAAI,CAACK,MAAM,CAAE;cAAAS,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9F,CAAC,eACN1D,OAAA,CAACF,cAAc;YAAC8D,MAAM,EAAE3C,eAAgB;YAAC4C,OAAO,EAAEV,WAAY;YAACW,QAAQ,EAAEjB,cAAe;YAACG,KAAK,EAAEnC,aAAc;YAACoC,OAAO,EAAElC,eAAgB;YAACsD,QAAQ,EAAEvD,gBAAiB;YAACwD,UAAU,EAAEtD;UAAmB;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GANlMnB,IAAI,CAACK,MAAM;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOhB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACxD,EAAA,CApKQD,SAAS;AAAAsE,EAAA,GAATtE,SAAS;AAsKlB,eAAeA,SAAS;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}