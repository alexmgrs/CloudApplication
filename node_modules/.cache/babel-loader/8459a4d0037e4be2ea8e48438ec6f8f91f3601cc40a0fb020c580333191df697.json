{"ast":null,"code":"var _jsxFileName = \"/home/alex/WebstormProjects/password/src/components/NotesPage.js\",\n  _s = $RefreshSig$();\n//NotesPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PopupNotes from \"./PopupNotes\";\nimport PopupEditNotes from './PopupEditNotes';\nimport './PopupForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesPage() {\n  _s();\n  const [newNoteTitle, setNewNoteTitle] = useState('');\n  const [newNoteContent, setNewNoteContent] = useState('');\n  const [notes, setNotes] = useState([]);\n  const [isAddPopupOpen, setIsAddPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup d'ajout\n  const [editNoteId, setEditNoteId] = useState(null); // État local pour stocker l'ID de la note en cours de modification\n  const [editNoteTitle, setEditNoteTitle] = useState(''); // État local pour le titre de la note en cours de modification\n  const [editNoteContent, setEditNoteContent] = useState(''); // État local pour le contenu de la note en cours de modification\n  const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup de modification\n\n  useEffect(() => {\n    // Effectuer une requête GET pour récupérer toutes les notes\n    fetch('http://localhost:3001/notes', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch notes');\n      }\n      return response.json();\n    }).then(data => {\n      setNotes(data); // Mettre à jour les notes dans l'état local\n    }).catch(error => {\n      console.error('Error fetching notes:', error);\n    });\n  }, []);\n\n  // Fonction pour ajouter une nouvelle note\n  const handleAddNote = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          Title: newNoteTitle,\n          Content: newNoteContent\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Si la note est ajoutée avec succès, mettre à jour la liste des notes\n        setNotes([...notes, data.note]);\n        // Effacer les champs de saisie pour une nouvelle note\n        setNewNoteTitle('');\n        setNewNoteContent('');\n      } else {\n        console.error('Erreur lors de l\\'ajout de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout de la note :', error);\n    }\n  };\n\n  // Fonction pour supprimer une note\n  const handleDeleteNote = async noteId => {\n    try {\n      const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        // Si la note est supprimée avec succès, mettre à jour la liste des notes en retirant la note supprimée\n        const updatedNotes = notes.filter(note => note.NoteID !== noteId);\n        setNotes(updatedNotes);\n      } else {\n        const data = await response.json();\n        console.error('Erreur lors de la suppression de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la note :', error);\n    }\n  };\n\n  // Fonction pour modifier une note\n  const handleEditNote = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/notes/${editNoteId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          Title: editNoteTitle,\n          Content: editNoteContent\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Si la note est modifiée avec succès, mettre à jour la liste des notes\n        const updatedNotes = notes.map(note => {\n          if (note.NoteID === editNoteId) {\n            return {\n              ...note,\n              Title: editNoteTitle,\n              Content: editNoteContent\n            };\n          }\n          return note;\n        });\n        setNotes(updatedNotes);\n        setIsEditPopupOpen(false); // Fermer le popup après la modification\n      } else {\n        console.error('Erreur lors de la modification de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la modification de la note :', error);\n    }\n  };\n  const openEditPopup = (noteId, title, content) => {\n    setEditNoteId(noteId);\n    setEditNoteTitle(title);\n    setEditNoteContent(content);\n    setIsEditPopupOpen(true);\n  };\n  const openAddPopup = () => {\n    setIsAddPopupOpen(true);\n  };\n\n  // Fonction pour fermer le popup\n  const closePopups = () => {\n    setIsAddPopupOpen(false);\n    setIsEditPopupOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ajouter une nouvelle note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openAddPopup,\n        children: \"Ajouter une note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(PopupNotes, {\n        isOpen: isAddPopupOpen,\n        onClose: closePopups,\n        onSubmit: handleAddNote,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Titre de la note\",\n          value: newNoteTitle,\n          onChange: e => setNewNoteTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Contenu de la note\",\n          value: newNoteContent,\n          onChange: e => setNewNoteContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liste des notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: note.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), \": \", note.Content, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openEditPopup(note.NoteID, note.Title, note.Content),\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PopupEditNotes, {\n          isOpen: isEditPopupOpen && editNoteId === note.NoteID,\n          onClose: closePopups,\n          onSubmit: handleEditNote,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Titre de la note\",\n            value: editNoteTitle,\n            onChange: e => setEditNoteTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Contenu de la note\",\n            value: editNoteContent,\n            onChange: e => setEditNoteContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteNote(note.NoteID),\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, note.NoteID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      children: \"Retour au tableau de bord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n_s(NotesPage, \"P9y31iRXgtWq1xAqi9xqCyTSmzc=\");\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","PopupNotes","PopupEditNotes","jsxDEV","_jsxDEV","NotesPage","_s","newNoteTitle","setNewNoteTitle","newNoteContent","setNewNoteContent","notes","setNotes","isAddPopupOpen","setIsAddPopupOpen","editNoteId","setEditNoteId","editNoteTitle","setEditNoteTitle","editNoteContent","setEditNoteContent","isEditPopupOpen","setIsEditPopupOpen","fetch","headers","localStorage","getItem","then","response","ok","Error","json","data","catch","error","console","handleAddNote","method","body","JSON","stringify","Title","Content","note","handleDeleteNote","noteId","updatedNotes","filter","NoteID","handleEditNote","map","openEditPopup","title","content","openAddPopup","closePopups","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","onSubmit","type","placeholder","value","onChange","e","target","to","_c","$RefreshReg$"],"sources":["/home/alex/WebstormProjects/password/src/components/NotesPage.js"],"sourcesContent":["//NotesPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PopupNotes from \"./PopupNotes\";\nimport PopupEditNotes from './PopupEditNotes';\nimport './PopupForm.css';\nfunction NotesPage() {\n    const [newNoteTitle, setNewNoteTitle] = useState('');\n    const [newNoteContent, setNewNoteContent] = useState('');\n    const [notes, setNotes] = useState([]);\n    const [isAddPopupOpen, setIsAddPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup d'ajout\n    const [editNoteId, setEditNoteId] = useState(null); // État local pour stocker l'ID de la note en cours de modification\n    const [editNoteTitle, setEditNoteTitle] = useState(''); // État local pour le titre de la note en cours de modification\n    const [editNoteContent, setEditNoteContent] = useState(''); // État local pour le contenu de la note en cours de modification\n    const [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // État local pour contrôler l'ouverture du popup de modification\n\n\n    useEffect(() => {\n        // Effectuer une requête GET pour récupérer toutes les notes\n        fetch('http://localhost:3001/notes', {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch notes');\n                }\n                return response.json();\n            })\n            .then(data => {\n                setNotes(data); // Mettre à jour les notes dans l'état local\n            })\n            .catch(error => {\n                console.error('Error fetching notes:', error);\n            });\n    }, []);\n\n    // Fonction pour ajouter une nouvelle note\n    const handleAddNote = async () => {\n        try {\n            const response = await fetch('http://localhost:3001/notes', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify({\n                    Title: newNoteTitle,\n                    Content: newNoteContent\n                }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                // Si la note est ajoutée avec succès, mettre à jour la liste des notes\n                setNotes([...notes, data.note]);\n                // Effacer les champs de saisie pour une nouvelle note\n                setNewNoteTitle('');\n                setNewNoteContent('');\n            } else {\n                console.error('Erreur lors de l\\'ajout de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de l\\'ajout de la note :', error);\n        }\n    };\n\n    // Fonction pour supprimer une note\n    const handleDeleteNote = async (noteId) => {\n        try {\n            const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n            });\n            if (response.ok) {\n                // Si la note est supprimée avec succès, mettre à jour la liste des notes en retirant la note supprimée\n                const updatedNotes = notes.filter(note => note.NoteID !== noteId);\n                setNotes(updatedNotes);\n            } else {\n                const data = await response.json();\n                console.error('Erreur lors de la suppression de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la suppression de la note :', error);\n        }\n    };\n\n    // Fonction pour modifier une note\n    const handleEditNote = async () => {\n        try {\n            const response = await fetch(`http://localhost:3001/notes/${editNoteId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify({\n                    Title: editNoteTitle,\n                    Content: editNoteContent\n                }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                // Si la note est modifiée avec succès, mettre à jour la liste des notes\n                const updatedNotes = notes.map(note => {\n                    if (note.NoteID === editNoteId) {\n                        return {\n                            ...note,\n                            Title: editNoteTitle,\n                            Content: editNoteContent\n                        };\n                    }\n                    return note;\n                });\n                setNotes(updatedNotes);\n                setIsEditPopupOpen(false); // Fermer le popup après la modification\n            } else {\n                console.error('Erreur lors de la modification de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la modification de la note :', error);\n        }\n    };\n    const openEditPopup = (noteId, title, content) => {\n        setEditNoteId(noteId);\n        setEditNoteTitle(title);\n        setEditNoteContent(content);\n        setIsEditPopupOpen(true);\n    };\n    const openAddPopup = () => {\n        setIsAddPopupOpen(true);\n    };\n\n    // Fonction pour fermer le popup\n    const closePopups = () => {\n        setIsAddPopupOpen(false);\n        setIsEditPopupOpen(false);\n    };\n    return (\n        <div>\n            <h2>Notes</h2>\n            <div>\n                <h3>Ajouter une nouvelle note</h3>\n                <button onClick={openAddPopup}>Ajouter une note</button> {/* Bouton pour ouvrir le popup d'ajout */}\n                <PopupNotes isOpen={isAddPopupOpen} onClose={closePopups} onSubmit={handleAddNote}>\n                    {/* Contenu du formulaire */}\n                    <input type=\"text\" placeholder=\"Titre de la note\" value={newNoteTitle} onChange={(e) => setNewNoteTitle(e.target.value)} />\n                    <textarea placeholder=\"Contenu de la note\" value={newNoteContent} onChange={(e) => setNewNoteContent(e.target.value)} />\n                </PopupNotes>\n            </div>\n            <h3>Liste des notes</h3>\n            <ul>\n                {notes.map(note => (\n                    <li key={note.NoteID}>\n                        <strong>{note.Title}</strong>: {note.Content}\n                        <button onClick={() => openEditPopup(note.NoteID, note.Title, note.Content)}>Modifier</button>\n                        <PopupEditNotes isOpen={isEditPopupOpen && editNoteId === note.NoteID} onClose={closePopups} onSubmit={handleEditNote}>\n                            {/* Contenu du formulaire */}\n                            <input type=\"text\" placeholder=\"Titre de la note\" value={editNoteTitle} onChange={(e) => setEditNoteTitle(e.target.value)} />\n                            <textarea placeholder=\"Contenu de la note\" value={editNoteContent} onChange={(e) => setEditNoteContent(e.target.value)} />\n                        </PopupEditNotes>\n                        <button onClick={() => handleDeleteNote(note.NoteID)}>Supprimer</button>\n                    </li>\n                ))}\n            </ul>\n            <Link to=\"/dashboard\">Retour au tableau de bord</Link>\n        </div>\n    );\n}\n\n\nexport default NotesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}