{"ast":null,"code":"var _jsxFileName = \"/home/alex/WebstormProjects/password/src/components/NotesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesPage() {\n  _s();\n  const [newNoteTitle, setNewNoteTitle] = useState('');\n  const [newNoteContent, setNewNoteContent] = useState('');\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    // Effectuer une requête GET pour récupérer toutes les notes\n    fetch('http://localhost:3001/notes', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch notes');\n      }\n      return response.json();\n    }).then(data => {\n      setNotes(data); // Mettre à jour les notes dans l'état local\n    }).catch(error => {\n      console.error('Error fetching notes:', error);\n    });\n  }, []);\n\n  // Fonction pour ajouter une nouvelle note\n  const handleAddNote = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          Title: newNoteTitle,\n          Content: newNoteContent\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Si la note est ajoutée avec succès, mettre à jour la liste des notes\n        setNotes([...notes, data.note]);\n        // Effacer les champs de saisie pour une nouvelle note\n        setNewNoteTitle('');\n        setNewNoteContent('');\n      } else {\n        console.error('Erreur lors de l\\'ajout de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout de la note :', error);\n    }\n  };\n\n  // Fonction pour supprimer une note\n  const handleDeleteNote = async noteId => {\n    try {\n      const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        // Si la note est supprimée avec succès, mettre à jour la liste des notes en retirant la note supprimée\n        const updatedNotes = notes.filter(note => note.NoteID !== noteId);\n        setNotes(updatedNotes);\n      } else {\n        const data = await response.json();\n        console.error('Erreur lors de la suppression de la note :', data.error);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la note :', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ajouter une nouvelle note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Titre de la note\",\n        value: newNoteTitle,\n        onChange: e => setNewNoteTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Contenu de la note\",\n        value: newNoteContent,\n        onChange: e => setNewNoteContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNote,\n        children: \"Ajouter la note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liste des notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: note.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), \": \", note.Content, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteNote(note.NoteID),\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, note.NoteID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      children: \"Retour au tableau de bord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(NotesPage, \"CVmzqeJgcrgjv4k1NZbKOXNoDiE=\");\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","NotesPage","_s","newNoteTitle","setNewNoteTitle","newNoteContent","setNewNoteContent","notes","setNotes","fetch","headers","localStorage","getItem","then","response","ok","Error","json","data","catch","error","console","handleAddNote","method","body","JSON","stringify","Title","Content","note","handleDeleteNote","noteId","updatedNotes","filter","NoteID","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","to","_c","$RefreshReg$"],"sources":["/home/alex/WebstormProjects/password/src/components/NotesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction NotesPage() {\n    const [newNoteTitle, setNewNoteTitle] = useState('');\n    const [newNoteContent, setNewNoteContent] = useState('');\n    const [notes, setNotes] = useState([]);\n\n    useEffect(() => {\n        // Effectuer une requête GET pour récupérer toutes les notes\n        fetch('http://localhost:3001/notes', {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch notes');\n                }\n                return response.json();\n            })\n            .then(data => {\n                setNotes(data); // Mettre à jour les notes dans l'état local\n            })\n            .catch(error => {\n                console.error('Error fetching notes:', error);\n            });\n    }, []);\n\n    // Fonction pour ajouter une nouvelle note\n    const handleAddNote = async () => {\n        try {\n            const response = await fetch('http://localhost:3001/notes', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify({\n                    Title: newNoteTitle,\n                    Content: newNoteContent\n                }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                // Si la note est ajoutée avec succès, mettre à jour la liste des notes\n                setNotes([...notes, data.note]);\n                // Effacer les champs de saisie pour une nouvelle note\n                setNewNoteTitle('');\n                setNewNoteContent('');\n            } else {\n                console.error('Erreur lors de l\\'ajout de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de l\\'ajout de la note :', error);\n        }\n    };\n\n    // Fonction pour supprimer une note\n    const handleDeleteNote = async (noteId) => {\n        try {\n            const response = await fetch(`http://localhost:3001/notes/${noteId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n            });\n            if (response.ok) {\n                // Si la note est supprimée avec succès, mettre à jour la liste des notes en retirant la note supprimée\n                const updatedNotes = notes.filter(note => note.NoteID !== noteId);\n                setNotes(updatedNotes);\n            } else {\n                const data = await response.json();\n                console.error('Erreur lors de la suppression de la note :', data.error);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la suppression de la note :', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Notes</h2>\n            <div>\n                <h3>Ajouter une nouvelle note</h3>\n                <input type=\"text\" placeholder=\"Titre de la note\" value={newNoteTitle} onChange={(e) => setNewNoteTitle(e.target.value)} />\n                <textarea placeholder=\"Contenu de la note\" value={newNoteContent} onChange={(e) => setNewNoteContent(e.target.value)} />\n                <button onClick={handleAddNote}>Ajouter la note</button>\n            </div>\n            <h3>Liste des notes</h3>\n            <ul>\n                {notes.map(note => (\n                    <li key={note.NoteID}>\n                        <strong>{note.Title}</strong>: {note.Content}\n                        <button onClick={() => handleDeleteNote(note.NoteID)}>Supprimer</button>\n                    </li>\n                ))}\n            </ul>\n            <Link to=\"/dashboard\">Retour au tableau de bord</Link>\n        </div>\n    );\n}\n\nexport default NotesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}