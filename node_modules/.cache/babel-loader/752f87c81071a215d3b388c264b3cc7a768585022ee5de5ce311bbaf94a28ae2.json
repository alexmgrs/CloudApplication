{"ast":null,"code":"var _jsxFileName = \"/home/alex/WebstormProjects/password/src/components/PasswordsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PopupForm from './PopupForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordListPage() {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n  // Autres états et fonctions\n\n  const handleOpenForm = () => {\n    setIsFormOpen(true);\n  };\n  const handleCloseForm = () => {\n    setIsFormOpen(false);\n  };\n  const handleSubmitForm = (email, password) => {\n    // Logique de soumission du formulaire\n    handleCloseForm(); // Fermer le formulaire après soumission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des mots de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"open-button\",\n      onClick: handleOpenForm,\n      children: \"Open Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupForm, {\n      isOpen: isFormOpen,\n      onClose: handleCloseForm,\n      onSubmit: handleSubmitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(PasswordListPage, \"asAwb8eD/fI3Oiy8QXktl+x26GQ=\");\n_c = PasswordListPage;\nexport default PasswordListPage;\nvar _c;\n$RefreshReg$(_c, \"PasswordListPage\");","map":{"version":3,"names":["React","useState","useEffect","PopupForm","jsxDEV","_jsxDEV","PasswordListPage","_s","isFormOpen","setIsFormOpen","handleOpenForm","handleCloseForm","handleSubmitForm","email","password","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/home/alex/WebstormProjects/password/src/components/PasswordsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PopupForm from './PopupForm';\n\nfunction PasswordListPage() {\n    const [isFormOpen, setIsFormOpen] = useState(false);\n\n    // Autres états et fonctions\n\n    const handleOpenForm = () => {\n        setIsFormOpen(true);\n    };\n\n    const handleCloseForm = () => {\n        setIsFormOpen(false);\n    };\n\n    const handleSubmitForm = (email, password) => {\n        // Logique de soumission du formulaire\n        handleCloseForm(); // Fermer le formulaire après soumission\n    };\n\n    return (\n        <div>\n            <h2>Liste des mots de passe</h2>\n            {/* Votre contenu existant */}\n            <button className=\"open-button\" onClick={handleOpenForm}>Open Form</button>\n            <PopupForm isOpen={isFormOpen} onClose={handleCloseForm} onSubmit={handleSubmitForm} />\n        </div>\n    );\n}\n\nexport default PasswordListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEnD;;EAEA,MAAMS,cAAc,GAAGA,CAAA,KAAM;IACzBD,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC1BF,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC1C;IACAH,eAAe,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACIN,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhCd,OAAA;MAAQe,SAAS,EAAC,aAAa;MAACC,OAAO,EAAEX,cAAe;MAAAK,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3Ed,OAAA,CAACF,SAAS;MAACmB,MAAM,EAAEd,UAAW;MAACe,OAAO,EAAEZ,eAAgB;MAACa,QAAQ,EAAEZ;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEd;AAACZ,EAAA,CA1BQD,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AA4BzB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}