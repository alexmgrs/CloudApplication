{"ast":null,"code":"var _jsxFileName = \"/home/alex/WebstormProjects/password/src/components/PasswordsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PopupForm from './PopupForm'; // Import du composant PopupForm\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordListPage() {\n  _s();\n  const [newPasswordUsername, setNewPasswordUsername] = useState('');\n  const [newPasswordPassword, setNewPasswordPassword] = useState('');\n  const [newPasswordWebsite, setNewPasswordWebsite] = useState('');\n  const [generateStrongPassword, setGenerateStrongPassword] = useState(false);\n  const [passwordLength, setPasswordLength] = useState(12);\n  const [includeNumbers, setIncludeNumbers] = useState(false);\n  const [includeSpecialChars, setIncludeSpecialChars] = useState(false);\n  const [passwords, setPasswords] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [selectedPassword, setSelectedPassword] = useState(null); // Nouvel état pour stocker les informations du mot de passe sélectionné\n\n  useEffect(() => {\n    fetch('http://localhost:3001/passwords', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch passwords');\n      }\n      return response.json();\n    }).then(data => {\n      setPasswords(data);\n    }).catch(error => {\n      console.error('Error fetching passwords:', error);\n    });\n  }, []);\n  const handleAddPassword = async () => {\n    // Gestion de l'ajout de mot de passe\n  };\n  const handleEditPassword = async () => {\n    // Gestion de la modification de mot de passe\n  };\n  const handleDeletePassword = async passwordId => {\n    // Gestion de la suppression de mot de passe\n  };\n  const handleOpenEditForm = password => {\n    setSelectedPassword(password);\n    setIsFormOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des mots de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"open-button\",\n      onClick: () => setIsFormOpen(true),\n      children: \"Open Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupForm, {\n      isOpen: isFormOpen,\n      onClose: () => setIsFormOpen(false),\n      onSubmit: selectedPassword ? handleEditPassword : handleAddPassword,\n      initialValues: {\n        username: selectedPassword ? selectedPassword.username : newPasswordUsername,\n        password: selectedPassword ? selectedPassword.password : newPasswordPassword,\n        website: selectedPassword ? selectedPassword.website : newPasswordWebsite,\n        generateStrongPassword: generateStrongPassword,\n        passwordLength: passwordLength,\n        includeNumbers: includeNumbers,\n        includeSpecialChars: includeSpecialChars\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liste des mots de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: passwords.map(password => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: password.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), \": \", password.password, \" - \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: password.website\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePassword(password.id),\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpenEditForm(password),\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, password.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      children: \"Retour au tableau de bord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(PasswordListPage, \"f4f4Si0ktoMG1jXbJlPio20PsxM=\");\n_c = PasswordListPage;\nexport default PasswordListPage;\nvar _c;\n$RefreshReg$(_c, \"PasswordListPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","PopupForm","jsxDEV","_jsxDEV","PasswordListPage","_s","newPasswordUsername","setNewPasswordUsername","newPasswordPassword","setNewPasswordPassword","newPasswordWebsite","setNewPasswordWebsite","generateStrongPassword","setGenerateStrongPassword","passwordLength","setPasswordLength","includeNumbers","setIncludeNumbers","includeSpecialChars","setIncludeSpecialChars","passwords","setPasswords","isFormOpen","setIsFormOpen","selectedPassword","setSelectedPassword","fetch","headers","localStorage","getItem","then","response","ok","Error","json","data","catch","error","console","handleAddPassword","handleEditPassword","handleDeletePassword","passwordId","handleOpenEditForm","password","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","isOpen","onClose","onSubmit","initialValues","username","website","map","id","to","_c","$RefreshReg$"],"sources":["/home/alex/WebstormProjects/password/src/components/PasswordsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PopupForm from './PopupForm'; // Import du composant PopupForm\n\nfunction PasswordListPage() {\n    const [newPasswordUsername, setNewPasswordUsername] = useState('');\n    const [newPasswordPassword, setNewPasswordPassword] = useState('');\n    const [newPasswordWebsite, setNewPasswordWebsite] = useState('');\n    const [generateStrongPassword, setGenerateStrongPassword] = useState(false);\n    const [passwordLength, setPasswordLength] = useState(12);\n    const [includeNumbers, setIncludeNumbers] = useState(false);\n    const [includeSpecialChars, setIncludeSpecialChars] = useState(false);\n    const [passwords, setPasswords] = useState([]);\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const [selectedPassword, setSelectedPassword] = useState(null); // Nouvel état pour stocker les informations du mot de passe sélectionné\n\n    useEffect(() => {\n        fetch('http://localhost:3001/passwords', {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch passwords');\n                }\n                return response.json();\n            })\n            .then(data => {\n                setPasswords(data);\n            })\n            .catch(error => {\n                console.error('Error fetching passwords:', error);\n            });\n    }, []);\n\n    const handleAddPassword = async () => {\n        // Gestion de l'ajout de mot de passe\n    };\n\n    const handleEditPassword = async () => {\n        // Gestion de la modification de mot de passe\n    };\n\n    const handleDeletePassword = async (passwordId) => {\n        // Gestion de la suppression de mot de passe\n    };\n\n    const handleOpenEditForm = (password) => {\n        setSelectedPassword(password);\n        setIsFormOpen(true);\n    };\n\n    return (\n        <div>\n            <h2>Liste des mots de passe</h2>\n            <button className=\"open-button\" onClick={() => setIsFormOpen(true)}>Open Form</button>\n            <PopupForm\n                isOpen={isFormOpen}\n                onClose={() => setIsFormOpen(false)}\n                onSubmit={selectedPassword ? handleEditPassword : handleAddPassword}\n                initialValues={{\n                    username: selectedPassword ? selectedPassword.username : newPasswordUsername,\n                    password: selectedPassword ? selectedPassword.password : newPasswordPassword,\n                    website: selectedPassword ? selectedPassword.website : newPasswordWebsite,\n                    generateStrongPassword: generateStrongPassword,\n                    passwordLength: passwordLength,\n                    includeNumbers: includeNumbers,\n                    includeSpecialChars: includeSpecialChars\n                }}\n            >\n                {/* Contenu du formulaire */}\n            </PopupForm>\n            <h3>Liste des mots de passe</h3>\n            <ul>\n                {passwords.map(password => (\n                    <li key={password.id}>\n                        <strong>{password.username}</strong>: {password.password} - <em>{password.website}</em>\n                        <button onClick={() => handleDeletePassword(password.id)}>Supprimer</button>\n                        <button onClick={() => handleOpenEditForm(password)}>Modifier</button>\n                    </li>\n                ))}\n            </ul>\n            <Link to=\"/dashboard\">Retour au tableau de bord</Link>\n        </div>\n    );\n}\n\nexport default PasswordListPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}